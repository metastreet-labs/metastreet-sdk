{
  "root": true,
  "ignorePatterns": ["**/*"],
  "plugins": ["@nrwl/nx"],
  "overrides": [
    {
      "files": ["*.ts", "*.tsx", "*.js", "*.jsx"],
      "rules": {
        "@nrwl/nx/enforce-module-boundaries": [
          "error",
          {
            "enforceBuildableLibDependency": true,
            "allow": [],
            "depConstraints": [
              {
                "sourceTag": "*",
                "onlyDependOnLibsWithTags": ["*"]
              }
            ]
          }
        ],
        // Custom rules
        // TODO: Change to "error" in CI
        "no-console": "warn",
        "no-restricted-syntax": [
          "error",
          // Source: https://github.com/jsx-eslint/eslint-plugin-react/issues/2073#issuecomment-864168062
          // Two rules below help us avoid this common point of confusion: https://stackoverflow.com/q/53048037
          // The selectors are inspired by https://github.com/yannickcr/eslint-plugin-react/issues/2073#issuecomment-844344470
          {
            "selector": ":matches(JSXElement, JSXFragment) > JSXExpressionContainer > LogicalExpression[operator='&&']",
            "message": "Please use `condition ? <Jsx /> : null`. Otherwise, there is a chance of rendering '0' instead of '' in some cases. Context: https://stackoverflow.com/q/53048037"
          },
          {
            "selector": ":matches(JSXElement, JSXFragment) > JSXExpressionContainer > LogicalExpression[operator='||']",
            "message": "Please use `value ?? fallbackValue`. Otherwise, there is a chance of rendering '0' instead of '' in some cases. Context: https://stackoverflow.com/q/53048037"
          }
        ],
        "func-style": ["warn", "expression"],
        "no-inner-declarations": ["warn", "functions"]
      }
    },
    {
      "files": ["*.ts", "*.tsx"],
      "extends": ["plugin:@nrwl/nx/typescript"],
      "rules": {
        "@typescript-eslint/consistent-type-definitions": ["warn", "interface"]
      }
    },
    {
      "files": ["*.js", "*.jsx"],
      "extends": ["plugin:@nrwl/nx/javascript"],
      "rules": {}
    },
    {
      "files": ["*.jsx", "*.tsx"],
      "rules": {
        "react/function-component-definition": [
          "warn",
          {
            "namedComponents": "arrow-function",
            "unnamedComponents": "arrow-function"
          }
        ]
      }
    },
    { "files": "*", "rules": { "eqeqeq": "off" } },
    {
      "files": "*.tsx",
      "rules": {
        "react/jsx-no-useless-fragment": ["warn", { "allowExpressions": true }]
      }
    }
  ]
}
