/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { ERC721, ERC721Interface } from "../ERC721";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234620003195762001694803803806200001d816200031e565b928339810190604081830312620003195780516001600160401b03908181116200031957836200004f91840162000344565b916020938482015183811162000319576200006b920162000344565b825190828211620003035760008054926001958685811c95168015620002f8575b88861014620002e4578190601f9586811162000291575b5088908683116001146200022d57849262000221575b5050600019600383901b1c191690861b1781555b81519384116200020d5784548581811c9116801562000202575b87821014620001ee57838111620001a6575b50859284116001146200014157839495509262000135575b5050600019600383901b1c191690821b1790555b6040516112cc9081620003c88239f35b01519050388062000111565b9190601f1984169585845280842093905b8782106200018e5750508385961062000174575b505050811b01905562000125565b015160001960f88460031b161c1916905538808062000166565b80878596829496860151815501950193019062000152565b8582528682208480870160051c820192898810620001e4575b0160051c019086905b828110620001d8575050620000f9565b838155018690620001c8565b92508192620001bf565b634e487b7160e01b82526022600452602482fd5b90607f1690620000e7565b634e487b7160e01b81526041600452602490fd5b015190503880620000b9565b8480528985208994509190601f198416865b8c8282106200027a575050841162000260575b505050811b018155620000cd565b015160001960f88460031b161c1916905538808062000252565b8385015186558c979095019493840193016200023f565b9091508380528884208680850160051c8201928b8610620002da575b918a91869594930160051c01915b828110620002cb575050620000a3565b8681558594508a9101620002bb565b92508192620002ad565b634e487b7160e01b83526022600452602483fd5b94607f16946200008c565b634e487b7160e01b600052604160045260246000fd5b600080fd5b6040519190601f01601f191682016001600160401b038111838210176200030357604052565b81601f8201121562000319578051906001600160401b038211620003035760209062000379601f8401601f191683016200031e565b93838552828483010111620003195782906000905b83838310620003ae57505011620003a457505090565b6000918301015290565b819350828193920101518282880101520183916200038e56fe60806040526004361015610013575b600080fd5b60003560e01c806301ffc9a71461011757806306fdde031461010e578063081812fc14610105578063095ea7b3146100fc57806323b872dd146100f357806342842e0e146100ea5780636352211e146100e157806370a08231146100d857806395d89b41146100cf578063a22cb465146100c6578063b88d4fde146100bd578063c87b56dd146100b45763e985e9c5146100ac57600080fd5b61000e610964565b5061000e61087a565b5061000e6107f0565b5061000e610692565b5061000e6105d0565b5061000e61052d565b5061000e61050e565b5061000e6104c6565b5061000e61049c565b5061000e610377565b5061000e61031a565b5061000e61020f565b5061000e610132565b6001600160e01b031981160361000e57565b503461000e57602036600319011261000e57602060043561015281610120565b63ffffffff60e01b166380ac58cd60e01b8114908115610190575b811561017f575b506040519015158152f35b6301ffc9a760e01b14905038610174565b635b5e139f60e01b8114915061016d565b918091926000905b8282106101c15750116101ba575050565b6000910152565b915080602091830151818601520182916101a9565b906020916101ef815180928185528580860191016101a1565b601f01601f1916010190565b90602061020c9281815201906101d6565b90565b503461000e5760008060031936011261031757604051908080549060019180831c9280821692831561030d575b60209283861085146102f95785885260208801949081156102d85750600114610280575b61027c8761027081890382610796565b604051918291826101fb565b0390f35b6000805294509192917f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b8386106102c757505050910190506102708261027c3880610260565b8054858701529482019481016102ab565b60ff191685525050505090151560051b0190506102708261027c3880610260565b634e487b7160e01b82526022600452602482fd5b93607f169361023c565b80fd5b503461000e57602036600319011261000e576020610339600435610af5565b6040516001600160a01b039091168152f35b600435906001600160a01b038216820361000e57565b602435906001600160a01b038216820361000e57565b503461000e57604036600319011261000e5761039161034b565b60243561039d816109c2565b916001600160a01b038084169082168114610418576103cf936103ca9133149081156103d1575b50610a83565b610fc7565b005b6001600160a01b03166000908152600560205260409020610412915061040b9033905b9060018060a01b0316600052602052604060002090565b5460ff1690565b386103c4565b60405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608490fd5b606090600319011261000e576001600160a01b0390600435828116810361000e5791602435908116810361000e579060443590565b503461000e576103cf6104ae36610467565b916104c16104bc8433610c88565b610b87565b610e39565b503461000e576103cf6104d836610467565b90604051926020840184811067ffffffffffffffff821117610501575b60405260008452610bed565b61050961077f565b6104f5565b503461000e57602036600319011261000e5760206103396004356109c2565b503461000e57602036600319011261000e576001600160a01b0361054f61034b565b16801561057857600052600360205261027c604060002054604051918291829190602083019252565b60405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608490fd5b503461000e57600080600319360112610317576040519080600190815480831c92808216928315610688575b60209283861085146102f95785885260208801949081156102d8575060011461062f5761027c8761027081890382610796565b600160005294509192917fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b83861061067757505050910190506102708261027c3880610260565b80548587015294820194810161065b565b93607f16936105fc565b503461000e57604036600319011261000e576106ac61034b565b602435801515810361000e576001600160a01b0382169133831461073a57816106f76107089233600052600560205260406000209060018060a01b0316600052602052604060002090565b9060ff801983541691151516179055565b604051901515815233907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3190602090a3005b60405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606490fd5b50634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176107b857604052565b6107c061077f565b604052565b60209067ffffffffffffffff81116107e3575b601f01601f19160190565b6107eb61077f565b6107d8565b503461000e57608036600319011261000e5761080a61034b565b610812610361565b6064359167ffffffffffffffff831161000e573660238401121561000e5782600401359161083f836107c5565b9261084d6040519485610796565b808452366024828701011161000e5760208160009260246103cf9801838801378501015260443591610bed565b503461000e57602036600319011261000e576004356000818152600260205260409020546001600160a01b031615610907576108b4610a3a565b8051156108f5576102706108e1916108e76108d161027c956111bf565b6040519485936020850190610a6c565b90610a6c565b03601f198101835282610796565b505061027c610902610a3a565b610270565b60405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608490fd5b503461000e57604036600319011261000e57602060ff6109b661098561034b565b61098d610361565b6001600160a01b0391821660009081526005865260408082209290931681526020919091522090565b54166040519015158152f35b6000908152600260205260409020546001600160a01b031680156109e35790565b60405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608490fd5b604051906020820182811067ffffffffffffffff821117610a5f575b60405260008252565b610a6761077f565b610a56565b90610a7f602092828151948592016101a1565b0190565b15610a8a57565b60405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608490fd5b6000818152600260205260409020546001600160a01b031615610b2d576000908152600460205260409020546001600160a01b031690565b60405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608490fd5b15610b8e57565b60405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6044820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b6064820152608490fd5b90610c11939291610c016104bc8433610c88565b610c0c838383610e39565b6110a3565b15610c1857565b60405162461bcd60e51b815280610c3160048201610c35565b0390fd5b60809060208152603260208201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60608201520190565b6000828152600260205260409020546001600160a01b031615610d1e57610cae826109c2565b9160018060a01b0390818316928285168414948515610ced575b50508315610cd7575b50505090565b610ce391929350610af5565b1614388080610cd1565b6001600160a01b0316600090815260056020526040902091945060ff91610d1491906103f4565b5416923880610cc8565b60405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608490fd5b15610d7f57565b60405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b50634e487b7160e01b600052601160045260246000fd5b60018110610df7575b6000190190565b610dff610dd0565b610df0565b6001906001198111610e14570190565b610a7f610dd0565b8019603011610e2c575b60300190565b610e34610dd0565b610e26565b90610e43836109c2565b6001600160a01b038381169290918216839003610f1e57610e92610ef592821694610e6f861515610d78565b610e7887610f71565b6001600160a01b0316600090815260036020526040902090565b610e9c8154610de7565b90556001600160a01b0381166000908152600360205260409020610ec08154610e04565b9055610ed6856000526002602052604060002090565b80546001600160a01b0319166001600160a01b03909216919091179055565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6000604051a4565b60405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608490fd5b600081815260046020526040812080546001600160a01b03191690556001600160a01b03610f9e836109c2565b167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92582604051a4565b600082815260046020526040902080546001600160a01b0319166001600160a01b0383161790556001600160a01b0380611000846109c2565b169116907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9256000604051a4565b9081602091031261000e575161020c81610120565b6001600160a01b03918216815291166020820152604081019190915260806060820181905261020c929101906101d6565b3d1561109e573d90611084826107c5565b916110926040519384610796565b82523d6000602084013e565b606090565b92909190823b1561115d576110d6926020926000604051809681958294630a85bd0160e11b9a8b85523360048601611042565b03926001600160a01b03165af16000918161112d575b5061111f576110f9611073565b8051908161111a5760405162461bcd60e51b815280610c3160048201610c35565b602001fd5b6001600160e01b0319161490565b61114f91925060203d8111611156575b6111478183610796565b81019061102d565b90386110ec565b503d61113d565b50505050600190565b90611170826107c5565b61117d6040519182610796565b828152809261118e601f19916107c5565b0190602036910137565b9081518110156111a9570160200190565b634e487b7160e01b600052603260045260246000fd5b8015611259576000818181805b61122f57506111da81611166565b935b6111e65750505090565b6111ef90610de7565b90600a9061121a61120a611204848406610e1c565b60ff1690565b60f81b6001600160f81b03191690565b841a6112268487611198565b530490816111dc565b91506001600a91600019811461124c575b019104808492916111cc565b611254610dd0565b611240565b506040516040810181811067ffffffffffffffff821117611289575b60405260018152600360fc1b602082015290565b61129161077f565b61127556fea2646970667358221220f4394072b37f851c8d66149d8ecbc9307f949730911c5b78a936ab487416a96f64736f6c634300080f0033";

type ERC721ConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: ERC721ConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721__factory extends ContractFactory {
  constructor(...args: ERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721> {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<ERC721>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  override attach(address: string): ERC721 {
    return super.attach(address) as ERC721;
  }
  override connect(signer: Signer): ERC721__factory {
    return super.connect(signer) as ERC721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721Interface {
    return new utils.Interface(_abi) as ERC721Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC721 {
    return new Contract(address, _abi, signerOrProvider) as ERC721;
  }
}
