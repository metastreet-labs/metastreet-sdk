/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { MockVault, MockVaultInterface } from "../MockVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ILoanPriceOracle",
        name: "loanPriceOracle_",
        type: "address",
      },
      {
        internalType: "contract INoteAdapter",
        name: "noteAdapter",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "PurchasePriceTooHigh",
    type: "error",
  },
  {
    inputs: [],
    name: "PurchasePriceTooLow",
    type: "error",
  },
  {
    inputs: [],
    name: "UnsupportedNoteParameters",
    type: "error",
  },
  {
    inputs: [],
    name: "UnsupportedNoteToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "noteToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "loanId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[2]",
        name: "trancheReturns",
        type: "uint256[2]",
      },
    ],
    name: "CollateralLiquidated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "noteToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "loanId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "collateralToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "collateralTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "collateralLiquidator",
        type: "address",
      },
    ],
    name: "CollateralWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "enum IVault.TrancheId",
        name: "trancheId",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "noteToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "loanId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[2]",
        name: "trancheLosses",
        type: "uint256[2]",
      },
    ],
    name: "LoanLiquidated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "noteToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "loanId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "adminFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[2]",
        name: "trancheReturns",
        type: "uint256[2]",
      },
    ],
    name: "LoanRepaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "noteToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "noteTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "loanId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "purchasePrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[2]",
        name: "trancheContributions",
        type: "uint256[2]",
      },
    ],
    name: "NotePurchased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "enum IVault.TrancheId",
        name: "trancheId",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Redeemed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "enum IVault.TrancheId",
        name: "trancheId",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "currencyToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IVault.TrancheId",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "loanPriceOracle",
    outputs: [
      {
        internalType: "contract ILoanPriceOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IVault.TrancheId",
        name: "",
        type: "uint8",
      },
    ],
    name: "lpToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "noteToken",
        type: "address",
      },
    ],
    name: "noteAdapters",
    outputs: [
      {
        internalType: "contract INoteAdapter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "onCollateralLiquidated",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "onLoanExpired",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "onLoanRepaid",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IVault.TrancheId",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "redeem",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IVault.TrancheId",
        name: "",
        type: "uint8",
      },
    ],
    name: "redemptionSharePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "noteToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "noteTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minPurchasePrice",
        type: "uint256",
      },
    ],
    name: "sellNote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    name: "sellNoteAndDeposit",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IVault.TrancheId",
        name: "",
        type: "uint8",
      },
    ],
    name: "sharePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "supportedNoteTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "utilization",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IVault.TrancheId",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "withdrawCollateral",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x6080806040523461010457604081610ef2803803809161001f8285610109565b8339810103126101045780516001600160a01b03808216929091839003610104576020015181811680910361010457600080546001600160a01b031990811685178255600180548216909317909255604051631acbe8dd60e21b81529193602090839060049082905afa9182156100f75781926100b2575b505016906002541617600255604051610daf90816101438239f35b9091506020813d82116100ef575b816100cd60209383610109565b810103126100eb57519082821682036100e857503880610097565b80fd5b5080fd5b3d91506100c0565b50604051903d90823e3d90fd5b600080fd5b601f909101601f19168101906001600160401b0382119082101761012c57604052565b634e487b7160e01b600052604160045260246000fdfe60806040526004361015610013575b600080fd5b60003560e01c806306fdde03146101625780630f93945014610159578063150b7a02146101505780631f2363ac1461013e5780632986de101461013e578063350c35e91461011a5780633f489914146101115780634aee96121461014757806361a9da231461013e57806361f6d449146101355780636a0f23d01461011a5780636b2fa3741461012c5780637e1c0b56146101235780638d3c13691461011a578063bb482f9614610111578063c42e473e14610108578063d828b554146100ff578063ea21cd92146100f65763f4d4c9d7146100ee57600080fd5b61000e61042f565b5061000e6109c6565b5061000e6108fe565b5061000e610880565b5061000e61042f565b5061000e61040b565b5061000e610856565b5061000e61082c565b5061000e61047d565b5061000e6103e5565b5061000e610451565b5061000e610342565b5061000e610249565b5061000e6101cd565b600091031261000e57565b919091602080825283519081818401526000945b8286106101b75750508060409394116101aa575b601f01601f1916010190565b600083828401015261019e565b858101820151848701604001529481019461018a565b503461000e57600036600319011261000e576102116040516101ee8161029c565b600a815269135bd8dac815985d5b1d60b21b602082015260405191829182610176565b0390f35b6001600160a01b0381160361000e57565b606090600319011261000e5760043561023e81610215565b906024359060443590565b3461000e5761025736610226565b505050610262610a9e565b565b50634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff811161028f57604052565b610297610264565b604052565b6040810190811067ffffffffffffffff82111761028f57604052565b6080810190811067ffffffffffffffff82111761028f57604052565b90601f8019910116810190811067ffffffffffffffff82111761028f57604052565b60405190610120820182811067ffffffffffffffff82111761028f57604052565b60209067ffffffffffffffff8111610335575b601f01601f19160190565b61033d610264565b61032a565b503461000e57608036600319011261000e5761035f600435610215565b61036a602435610215565b60643567ffffffffffffffff811161000e573660238201121561000e5780600401359061039682610317565b916103a460405193846102d4565b808352366024828401011161000e576000928160246020940184830137010152604051630a85bd0160e11b8152602090f35b60043590600282101561000e57565b503461000e57602036600319011261000e576103ff6103d6565b50602060405160008152f35b3461000e57604036600319011261000e57610427600435610215565b610262610a9e565b3461000e57604036600319011261000e576104486103d6565b50610262610a9e565b3461000e5760a036600319011261000e5761046d600435610215565b3660a41161000e57610262610a9e565b503461000e5761048c36610226565b6001549091906104ac906001600160a01b03165b6001600160a01b031690565b60408051638ace8ae760e01b81526004959194602093919284848981865afa93841561081f575b6000946107f0575b506001600160a01b03908116931683036107e05760025461053990859061050a906001600160a01b03166104a0565b88516344147cf960e11b81528a81018981526001600160a01b0390921660208301529283918291604090910190565b0381865afa9081156107d3575b6000916107a6575b50156107965785516301c5004b60e21b81528088018681526101209384918391908290819060200103915afa928315610789575b60009361075a575b50506000546105a1906001600160a01b03166104a0565b60e083015185906001600160a01b0316916101008501519089860151938b61064f8c60608a01998a516105f460806105e460a085015167ffffffffffffffff1690565b93015167ffffffffffffffff1690565b9251998a988997889763d3e4d5fd60e01b89528801929360c094600096939897929860e086019960018060a01b0316865260208601526040850152606084015267ffffffffffffffff80921660808401521660a08201520152565b03915afa94851561074d575b60009561071e575b5050831061070e57518210156106fe57803b1561000e578351632142170760e11b81523395810195865230602087015260408601939093526000946106d59391869183919082908490829060600103925af180156106f1575b6106d8575b5060025433906001600160a01b0316610bad565b51f35b806106e56106eb9261027b565b8061016b565b386106c1565b6106f96109fb565b6106bc565b5050505163591445fd60e01b8152fd5b845163a7e5f4f560e01b81528690fd5b61073e929550803d10610746575b61073681836102d4565b810190610b9e565b923880610663565b503d61072c565b6107556109fb565b61065b565b61077a929350803d10610782575b61077281836102d4565b810190610b0e565b90388061058a565b503d610768565b6107916109fb565b610582565b855163aec6813d60e01b81528790fd5b6107c69150853d87116107cc575b6107be81836102d4565b810190610ad6565b3861054e565b503d6107b4565b6107db6109fb565b610546565b855163f55484e360e01b81528790fd5b610811919450853d8711610818575b61080981836102d4565b8101906109e3565b92386104db565b503d6107ff565b6108276109fb565b6104d3565b503461000e57600036600319011261000e576002546040516001600160a01b039091168152602090f35b503461000e57600036600319011261000e576000546040516001600160a01b039091168152602090f35b503461000e57602036600319011261000e5760206108a86004356108a381610215565b610a08565b6040516001600160a01b039091168152f35b6020908160408183019282815285518094520193019160005b8281106108e1575050505090565b83516001600160a01b0316855293810193928101926001016108d3565b503461000e57600036600319011261000e5761021160405161091f8161029c565b600181526020368183013760015461098f90600490602090610949906001600160a01b03166104a0565b604051638ace8ae760e01b815292839182905afa9081156109b9575b60009161099b575b506001600160a01b031661098083610a7b565b6001600160a01b039091169052565b604051918291826108ba565b6109b3915060203d81116108185761080981836102d4565b3861096d565b6109c16109fb565b610965565b503461000e57600036600319011261000e57602060405160008152f35b9081602091031261000e57516109f881610215565b90565b506040513d6000823e3d90fd5b600154604051638ace8ae760e01b81526001600160a01b039182169291908190602081600481885afa908115610a6e575b600091610a50575b50169116146109f85750600090565b610a68915060203d81116108185761080981836102d4565b38610a41565b610a766109fb565b610a39565b805115610a885760200190565b634e487b7160e01b600052603260045260246000fd5b5060405162461bcd60e51b815260206004820152600f60248201526e139bdd081a5b5c1b195b595b9d1959608a1b6044820152606490fd5b9081602091031261000e5751801515810361000e5790565b519061026282610215565b519067ffffffffffffffff8216820361000e57565b908161012091031261000e57610b226102f6565b9080518252610b3360208201610aee565b60208301526040810151604083015260608101516060830152610b5860808201610af9565b6080830152610b6960a08201610af9565b60a0830152610b7a60c08201610aee565b60c0830152610b8b60e08201610aee565b60e0830152610100809101519082015290565b9081602091031261000e575190565b60405163a9059cbb60e01b60208083019182526001600160a01b03948516602484015260448084019690965294825290929091610be9846102b8565b169060405192610bf88461029c565b8484527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656485850152823b15610c6957610c44939260009283809351925af1610c3e610d0d565b90610d3d565b80519081610c5157505050565b8261026293610c64938301019101610ad6565b610cae565b60405162461bcd60e51b815260048101869052601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b15610cb557565b60405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608490fd5b3d15610d38573d90610d1e82610317565b91610d2c60405193846102d4565b82523d6000602084013e565b606090565b90919015610d49575090565b815115610d595750805190602001fd5b60405162461bcd60e51b8152908190610d759060048301610176565b0390fdfea2646970667358221220721e9f8c2c3bcbc2a775459d76522f7ab9a309e363fdd67f0b3db01eace5fdfe64736f6c634300080f0033";

type MockVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockVault__factory extends ContractFactory {
  constructor(...args: MockVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    loanPriceOracle_: PromiseOrValue<string>,
    noteAdapter: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockVault> {
    return super.deploy(
      loanPriceOracle_,
      noteAdapter,
      overrides || {}
    ) as Promise<MockVault>;
  }
  override getDeployTransaction(
    loanPriceOracle_: PromiseOrValue<string>,
    noteAdapter: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      loanPriceOracle_,
      noteAdapter,
      overrides || {}
    );
  }
  override attach(address: string): MockVault {
    return super.attach(address) as MockVault;
  }
  override connect(signer: Signer): MockVault__factory {
    return super.connect(signer) as MockVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockVaultInterface {
    return new utils.Interface(_abi) as MockVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockVault {
    return new Contract(address, _abi, signerOrProvider) as MockVault;
  }
}
